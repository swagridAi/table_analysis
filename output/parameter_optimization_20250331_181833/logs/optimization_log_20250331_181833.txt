[2025-03-31 18:18:33] Loading and processing data...
[2025-03-31 18:18:33] Calculating co-occurrence matrix...
[2025-03-31 18:18:33] Limiting to 50 out of 864 possible combinations
[2025-03-31 18:18:33] Starting parameter optimization with 50 combinations
[2025-03-31 18:18:33] Testing combination 1/50: {'community_algorithm': 'louvain', 'community_resolution': 1.5, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:33] Testing combination 2/50: {'community_algorithm': 'louvain', 'community_resolution': 1.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:34] Testing combination 3/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 1.2, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:35] Testing combination 4/50: {'community_algorithm': 'louvain', 'community_resolution': 1.0, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:36] Testing combination 5/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.0, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:37] Testing combination 6/50: {'community_algorithm': 'louvain', 'community_resolution': 2.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:37] Testing combination 7/50: {'community_algorithm': 'label_propagation', 'community_resolution': 0.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:38] Testing combination 8/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.0, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:38] Testing combination 9/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 0.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:39] Testing combination 10/50: {'community_algorithm': 'louvain', 'community_resolution': 0.5, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:39] Testing combination 11/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 2.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:39] Testing combination 12/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 0.8, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:40] Testing combination 13/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:40] Testing combination 14/50: {'community_algorithm': 'louvain', 'community_resolution': 1.5, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:40] Testing combination 15/50: {'community_algorithm': 'louvain', 'community_resolution': 0.8, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:41] Testing combination 16/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.5, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:41] Testing combination 17/50: {'community_algorithm': 'louvain', 'community_resolution': 1.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:41] Testing combination 18/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 1.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:41] Testing combination 19/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:42] Testing combination 20/50: {'community_algorithm': 'louvain', 'community_resolution': 0.5, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:42] Testing combination 21/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 0.5, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:42] Testing combination 22/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.2, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:42] Testing combination 23/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 1.5, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:43] Testing combination 24/50: {'community_algorithm': 'louvain', 'community_resolution': 0.5, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:43] Testing combination 25/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 1.5, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:43] Testing combination 26/50: {'community_algorithm': 'louvain', 'community_resolution': 1.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:44] Testing combination 27/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 1.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:44] Testing combination 28/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 0.8, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:44] Testing combination 29/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 2.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:45] Testing combination 30/50: {'community_algorithm': 'louvain', 'community_resolution': 1.5, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:45] Testing combination 31/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 2.0, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:45] Testing combination 32/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 2.0, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:45] Testing combination 33/50: {'community_algorithm': 'louvain', 'community_resolution': 1.2, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:46] Testing combination 34/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.2, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:46] Testing combination 35/50: {'community_algorithm': 'louvain', 'community_resolution': 2.0, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:46] Testing combination 36/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 0.8, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:47] Testing combination 37/50: {'community_algorithm': 'louvain', 'community_resolution': 0.8, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:47] Testing combination 38/50: {'community_algorithm': 'louvain', 'community_resolution': 0.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:47] Testing combination 39/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:47] Testing combination 40/50: {'community_algorithm': 'louvain', 'community_resolution': 2.0, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:48] Testing combination 41/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 0.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:48] Testing combination 42/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.2, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:48] Testing combination 43/50: {'community_algorithm': 'louvain', 'community_resolution': 1.0, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:49] Testing combination 44/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.5, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:49] Testing combination 45/50: {'community_algorithm': 'louvain', 'community_resolution': 1.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:49] Testing combination 46/50: {'community_algorithm': 'greedy_modularity', 'community_resolution': 1.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.3, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:49] Testing combination 47/50: {'community_algorithm': 'louvain', 'community_resolution': 1.0, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.4}
[2025-03-31 18:18:50] Testing combination 48/50: {'community_algorithm': 'louvain', 'community_resolution': 1.2, 'min_pattern_frequency': 2, 'quality_weight_coverage': 0.4, 'quality_weight_redundancy': 0.6}
[2025-03-31 18:18:50] Testing combination 49/50: {'community_algorithm': 'label_propagation', 'community_resolution': 0.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.3}
[2025-03-31 18:18:50] Testing combination 50/50: {'community_algorithm': 'label_propagation', 'community_resolution': 1.0, 'min_pattern_frequency': 4, 'quality_weight_coverage': 0.5, 'quality_weight_redundancy': 0.5}
[2025-03-31 18:18:50] Results saved to C:\Users\User\python_code\transformation_new\output\parameter_optimization_20250331_181833\results\optimization_results.csv
[2025-03-31 18:18:50] Optimal parameters found: {'combination_id': 38, 'community_algorithm': 'label_propagation', 'community_resolution': 1.5, 'min_pattern_frequency': 3, 'quality_weight_coverage': 0.6, 'quality_weight_redundancy': 0.3, 'num_communities': 1, 'avg_community_size': 77.0, 'avg_affinity_score': 0.031801093643198906, 'coverage_ratio': 1.0, 'weighted_coverage': 1.0, 'redundancy_score': 0.0, 'quality_score': 0.6031801093643199}
